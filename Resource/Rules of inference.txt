==================Rules==================
program -> function functionList
functionList -> function functionList | E
function -> rettype name ( parlist ) { body }

parlist -> type name | type name , params | E
params -> type name , params | type name

body -> command ; body | E
command -> type name | name = expr | return expr | print ( name ) | if ( condition ) { body } else { body } | while( condition ){ body }

condition -> expr sign expr
sign -> < | <= | == | != | > | >=

expr -> term [+-] term [+-] ... [+-] term // неформально определены
term -> factor [*/] factor [*/] ... [*/] factor // неформально определены
factor -> power ^ factor | power
power -> atom | - atom
atom -> number | name | ( expr ) | name ( arglist )

arglist -> expr | args | E
args -> expr , args | expr

type -> int | double
rettype -> void | int | double

==================Reference==============
E - empty word
[...] - any word of brackets
print ( name ) - name is only of variable
if and while without ';'
